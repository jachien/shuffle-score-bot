buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.7.RELEASE'
    }
}

// https://github.com/johnmartel/javaccPlugin
plugins {
    id "ca.coglinc.javacc" version "2.4.0"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.junit.platform.gradle.plugin'

group="org.jchien.shuffle"
version="1.0"
sourceCompatibility="1.8"

repositories {
    jcenter()
    mavenLocal()
}

def log4j2Version = '2.8.2'
def springVersion = '1.5.7.RELEASE'

dependencies {
    // https://mvnrepository.com/artifact/net.java.dev.javacc/javacc
    compile group: 'net.java.dev.javacc', name: 'javacc', version: '7.0.3'

    // https://bintray.com/thatjavanerd/maven/JRAW
    compile 'net.dean.jraw:JRAW:0.9.0'

    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.24'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4j2Version}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4j2Version}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4j2Version}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-jul', version: "${log4j2Version}"

    // spring boot using log4j2 instead of logback
    // https://stackoverflow.com/a/28526317/7166633
    [
        [group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: "${springVersion}"],
        [group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: "${springVersion}"],
        [group: 'org.springframework.boot', name: 'spring-boot-starter-jetty', version: "${springVersion}"],
    ].each { dep ->
        compile(dep) {
            exclude module: "spring-boot-starter-logging"
            exclude module: "logback-classic"
        }
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2', version: "${springVersion}"

    testCompile("org.junit.jupiter:junit-jupiter-api:5.0.2")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:5.0.2")

    // To avoid compiler warnings about @API annotations in JUnit code.
    compile('org.apiguardian:apiguardian-api:1.0.0')
}

compileJavacc {
    inputDirectory = file('src/main/javacc')
    // todo figure out how to use base directory of build/generated/javacc with subdir based on package
    outputDirectory = file(project.buildDir.absolutePath + '/generated/javacc/org/jchien/shuffle/parser')
    arguments = [grammar_encoding: 'UTF-8']
}

junitPlatform {
    // platformVersion '1.0.2'
    filters {
        engines {
            // include 'junit-jupiter', 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            exclude 'slow'
        }
        // includeClassNamePattern '.*Test'
    }
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    logManager 'org.apache.logging.log4j.jul.LogManager'
}

sourceSets.main.java.srcDir new File(buildDir, 'generated/javacc')
idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('build/generated/javacc')
    }
}

